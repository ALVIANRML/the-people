{"ast":null,"code":"const express = require(\"express\");\nconst router = express.Router();\nconst connectToDatabase = require(\"../dbConfig\");\nconst sql = require(\"mssql\");\nrouter.get('/get-all-images', async (req, res) => {\n  try {\n    const pool = await connectToDatabase();\n\n    // Query untuk mendapatkan semua gambar\n    const result = await pool.request().query('SELECT id, image FROM CAROUSEL');\n    if (result.recordset.length > 0) {\n      const images = result.recordset.map(record => {\n        const binaryImage = record.image;\n        const base64Image = Buffer.from(binaryImage).toString('base64'); // Konversi ke Base64\n\n        return {\n          id: record.id,\n          image: `data:image/png;base64,${base64Image}`\n        };\n      });\n      res.status(200).json(images);\n    } else {\n      res.status(404).json({\n        message: 'No images found'\n      });\n    }\n  } catch (error) {\n    console.error('Error fetching images:', error);\n    res.status(500).json({\n      message: 'Server error'\n    });\n  }\n});\nmodule.exports = router;","map":{"version":3,"names":["express","require","router","Router","connectToDatabase","sql","get","req","res","pool","result","request","query","recordset","length","images","map","record","binaryImage","image","base64Image","Buffer","from","toString","id","status","json","message","error","console","module","exports"],"sources":["C:/projek AKU/the-people/src/component/Carousel.js"],"sourcesContent":["const express = require(\"express\");\r\nconst router = express.Router();\r\nconst connectToDatabase = require(\"../dbConfig\");\r\nconst sql = require(\"mssql\");\r\n\r\nrouter.get('/get-all-images', async (req, res) => {\r\n    try {\r\n        const pool = await connectToDatabase();\r\n\r\n        // Query untuk mendapatkan semua gambar\r\n        const result = await pool.request().query('SELECT id, image FROM CAROUSEL');\r\n\r\n        if (result.recordset.length > 0) {\r\n            const images = result.recordset.map(record => {\r\n                const binaryImage = record.image;\r\n                const base64Image = Buffer.from(binaryImage).toString('base64'); // Konversi ke Base64\r\n\r\n                return {\r\n                    id: record.id,\r\n                    image: `data:image/png;base64,${base64Image}`\r\n                };\r\n            });\r\n\r\n            res.status(200).json(images);\r\n        } else {\r\n            res.status(404).json({ message: 'No images found' });\r\n        }\r\n    } catch (error) {\r\n        console.error('Error fetching images:', error);\r\n        res.status(500).json({ message: 'Server error' });\r\n    }\r\n});\r\n\r\nmodule.exports = router;\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAM,CAAC,CAAC;AAC/B,MAAMC,iBAAiB,GAAGH,OAAO,CAAC,aAAa,CAAC;AAChD,MAAMI,GAAG,GAAGJ,OAAO,CAAC,OAAO,CAAC;AAE5BC,MAAM,CAACI,GAAG,CAAC,iBAAiB,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EAC9C,IAAI;IACA,MAAMC,IAAI,GAAG,MAAML,iBAAiB,CAAC,CAAC;;IAEtC;IACA,MAAMM,MAAM,GAAG,MAAMD,IAAI,CAACE,OAAO,CAAC,CAAC,CAACC,KAAK,CAAC,gCAAgC,CAAC;IAE3E,IAAIF,MAAM,CAACG,SAAS,CAACC,MAAM,GAAG,CAAC,EAAE;MAC7B,MAAMC,MAAM,GAAGL,MAAM,CAACG,SAAS,CAACG,GAAG,CAACC,MAAM,IAAI;QAC1C,MAAMC,WAAW,GAAGD,MAAM,CAACE,KAAK;QAChC,MAAMC,WAAW,GAAGC,MAAM,CAACC,IAAI,CAACJ,WAAW,CAAC,CAACK,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;;QAEjE,OAAO;UACHC,EAAE,EAAEP,MAAM,CAACO,EAAE;UACbL,KAAK,EAAE,yBAAyBC,WAAW;QAC/C,CAAC;MACL,CAAC,CAAC;MAEFZ,GAAG,CAACiB,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAACX,MAAM,CAAC;IAChC,CAAC,MAAM;MACHP,GAAG,CAACiB,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,OAAO,EAAE;MAAkB,CAAC,CAAC;IACxD;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9CpB,GAAG,CAACiB,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,OAAO,EAAE;IAAe,CAAC,CAAC;EACrD;AACJ,CAAC,CAAC;AAEFG,MAAM,CAACC,OAAO,GAAG7B,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}