{"ast":null,"code":"import React,{useState,useEffect}from'react';import logo from'../logo.svg';import'../App.css';import'../css/Dashboard.css';import LogoHeader from'../component/LogoHeader';import'bootstrap/dist/css/bootstrap.min.css';import'bootstrap/dist/js/bootstrap.bundle.min.js';import{Popup}from'../cms/component_cms/PopupCms';import{PopupUpdateCalender}from'../cms/component_cms/PopupCms';import{PopupUpdateEvent}from'../cms/component_cms/PopupCms';import{ButtonDashboard}from'./component_cms/ButtonDashboard';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Dashboard(){const[popupType,setPopupType]=useState('');// Untuk melacak jenis popup yang aktif\nconst handleButtonClick=type=>{setPopupType(type);};const closePopup=()=>{setPopupType('');};// UseEffect to handle body overflow\nuseEffect(()=>{if(popupType){document.body.style.overflow='hidden';}else{document.body.style.overflow='auto';}// Cleanup function\nreturn()=>{document.body.style.overflow='auto';};},[popupType]);return/*#__PURE__*/_jsxs(\"div\",{className:\"app-container\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"app-header\",children:[/*#__PURE__*/_jsx(LogoHeader,{}),/*#__PURE__*/_jsx(ButtonDashboard,{text:\"Update Carousel\",onClick:()=>handleButtonClick('carousel')}),/*#__PURE__*/_jsx(ButtonDashboard,{text:\"Update Calendar\",onClick:()=>handleButtonClick('calendar')}),/*#__PURE__*/_jsx(ButtonDashboard,{text:\"Update Event\",onClick:()=>handleButtonClick('event')})]}),popupType==='carousel'&&/*#__PURE__*/_jsx(Popup,{isOpen:true,onClose:closePopup}),popupType==='calendar'&&/*#__PURE__*/_jsx(PopupUpdateCalender,{isOpen:true,onClose:closePopup}),popupType==='event'&&/*#__PURE__*/_jsx(PopupUpdateEvent,{isOpen:true,onClose:closePopup})]});}export default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","logo","LogoHeader","Popup","PopupUpdateCalender","PopupUpdateEvent","ButtonDashboard","jsx","_jsx","jsxs","_jsxs","Dashboard","popupType","setPopupType","handleButtonClick","type","closePopup","document","body","style","overflow","className","children","text","onClick","isOpen","onClose"],"sources":["C:/projek AKU/the-people/src/cms/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport logo from '../logo.svg';\r\nimport '../App.css';\r\nimport '../css/Dashboard.css';\r\nimport LogoHeader from '../component/LogoHeader';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js';\r\nimport { Popup } from '../cms/component_cms/PopupCms';\r\nimport { PopupUpdateCalender } from '../cms/component_cms/PopupCms';\r\nimport { PopupUpdateEvent } from '../cms/component_cms/PopupCms';\r\nimport { ButtonDashboard } from './component_cms/ButtonDashboard';\r\n\r\nfunction Dashboard() {\r\n  const [popupType, setPopupType] = useState(''); // Untuk melacak jenis popup yang aktif\r\n\r\n  const handleButtonClick = (type) => {\r\n    setPopupType(type);\r\n  };\r\n\r\n  const closePopup = () => {\r\n    setPopupType('');\r\n  };\r\n\r\n  // UseEffect to handle body overflow\r\n  useEffect(() => {\r\n    if (popupType) {\r\n      document.body.style.overflow = 'hidden';\r\n    } else {\r\n      document.body.style.overflow = 'auto';\r\n    }\r\n\r\n    // Cleanup function\r\n    return () => {\r\n      document.body.style.overflow = 'auto';\r\n    };\r\n  }, [popupType]);\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <header className=\"app-header\">\r\n        <LogoHeader />\r\n        <ButtonDashboard text=\"Update Carousel\" onClick={() => handleButtonClick('carousel')} />\r\n        <ButtonDashboard text=\"Update Calendar\" onClick={() => handleButtonClick('calendar')} />\r\n        <ButtonDashboard text=\"Update Event\" onClick={() => handleButtonClick('event')} />\r\n      </header>\r\n\r\n      {/* Render pop-up berdasarkan jenis yang dipilih */}\r\n      {popupType === 'carousel' && <Popup isOpen={true} onClose={closePopup} />}\r\n      {popupType === 'calendar' && <PopupUpdateCalender isOpen={true} onClose={closePopup} />}\r\n      {popupType === 'event' && <PopupUpdateEvent isOpen={true} onClose={closePopup} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,IAAI,KAAM,aAAa,CAC9B,MAAO,YAAY,CACnB,MAAO,sBAAsB,CAC7B,MAAO,CAAAC,UAAU,KAAM,yBAAyB,CAChD,MAAO,sCAAsC,CAC7C,MAAO,2CAA2C,CAClD,OAASC,KAAK,KAAQ,+BAA+B,CACrD,OAASC,mBAAmB,KAAQ,+BAA+B,CACnE,OAASC,gBAAgB,KAAQ,+BAA+B,CAChE,OAASC,eAAe,KAAQ,iCAAiC,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAElE,QAAS,CAAAC,SAASA,CAAA,CAAG,CACnB,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CAAE;AAEhD,KAAM,CAAAe,iBAAiB,CAAIC,IAAI,EAAK,CAClCF,YAAY,CAACE,IAAI,CAAC,CACpB,CAAC,CAED,KAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,CACvBH,YAAY,CAAC,EAAE,CAAC,CAClB,CAAC,CAED;AACAb,SAAS,CAAC,IAAM,CACd,GAAIY,SAAS,CAAE,CACbK,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,QAAQ,CAAG,QAAQ,CACzC,CAAC,IAAM,CACLH,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,QAAQ,CAAG,MAAM,CACvC,CAEA;AACA,MAAO,IAAM,CACXH,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,QAAQ,CAAG,MAAM,CACvC,CAAC,CACH,CAAC,CAAE,CAACR,SAAS,CAAC,CAAC,CAEf,mBACEF,KAAA,QAAKW,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BZ,KAAA,WAAQW,SAAS,CAAC,YAAY,CAAAC,QAAA,eAC5Bd,IAAA,CAACN,UAAU,GAAE,CAAC,cACdM,IAAA,CAACF,eAAe,EAACiB,IAAI,CAAC,iBAAiB,CAACC,OAAO,CAAEA,CAAA,GAAMV,iBAAiB,CAAC,UAAU,CAAE,CAAE,CAAC,cACxFN,IAAA,CAACF,eAAe,EAACiB,IAAI,CAAC,iBAAiB,CAACC,OAAO,CAAEA,CAAA,GAAMV,iBAAiB,CAAC,UAAU,CAAE,CAAE,CAAC,cACxFN,IAAA,CAACF,eAAe,EAACiB,IAAI,CAAC,cAAc,CAACC,OAAO,CAAEA,CAAA,GAAMV,iBAAiB,CAAC,OAAO,CAAE,CAAE,CAAC,EAC5E,CAAC,CAGRF,SAAS,GAAK,UAAU,eAAIJ,IAAA,CAACL,KAAK,EAACsB,MAAM,CAAE,IAAK,CAACC,OAAO,CAAEV,UAAW,CAAE,CAAC,CACxEJ,SAAS,GAAK,UAAU,eAAIJ,IAAA,CAACJ,mBAAmB,EAACqB,MAAM,CAAE,IAAK,CAACC,OAAO,CAAEV,UAAW,CAAE,CAAC,CACtFJ,SAAS,GAAK,OAAO,eAAIJ,IAAA,CAACH,gBAAgB,EAACoB,MAAM,CAAE,IAAK,CAACC,OAAO,CAAEV,UAAW,CAAE,CAAC,EAC9E,CAAC,CAEV,CAEA,cAAe,CAAAL,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}